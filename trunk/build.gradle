usePlugin 'groovy'
usePlugin 'maven'

defaultTasks 'test'

archivesBaseName = 'gparallelizer'
group = 'org.gparallelizer'
version = '0.8.3'
manifest.mainAttributes (
                         'Implementation-Title': 'gparallelizer' ,
                         'Implementation-Version': version ,
                         'provider': 'Vaclav Pech'
                         )

repositories {
  mavenCentral ( )
  mavenRepo urls: [ 'http://download.java.net/maven/2/' ]
}

configurations {
  deployerJars
}

dependencies {
  groovy group: 'org.codehaus.groovy', name: 'groovy-all', version: '1.6.4'
  testCompile group: 'junit', name: 'junit', version: '4.7'
  compile group: 'org.coconut.forkjoin' , name: 'jsr166y', version: '070108'
  deployerJars group: 'org.jvnet.wagon-svn', name: 'wagon-svn', version: '1.9'
}

//todo remove potentially once fixed
compileTest.dependsOn  compile

uploadArchives {
  repositories.mavenDeployer {
    uniqueVersion = false
    configuration = configurations.deployerJars
    repository ( url: 'java-net:/maven2-repository/trunk/repository/' ) {
    }
  }
}

def titleForDocumentation = archivesBaseName + ' ' + version
def copyrightString = 'Copyright &#169; 2008&#8211;2009  Vaclav Pech.  All Rights Reserved.'
def packageTitle = group

javadoc {
  dependsOn ( 'compile' )
  options.subPackages ( packageTitle )
  options.overview ( 'overview.html' )
  options.showAll ( )
  options.encoding ( 'UTF-8' )
  options.setUse ( true )
  options.author ( true )
  options.version ( true )
  options.windowTitle ( titleForDocumentation )
  options.docTitle ( titleForDocumentation )
  options.footer ( copyrightString )
}
javadoc.doFirst {
  javadoc.title = titleForDocumentation
  javadoc.options.docTitle = javadoc.title
}

groovydoc {
  dependsOn ( 'compile' )
  //options.subPackages ( 'org.gparallelizer )
  //options.overview ( 'overview.html' )
  //options.showAll ( )
  //options.encoding ( 'UTF-8' )
  //options.setUse ( true )
  ////options.author ( true )
  ////options.version ( true )
  //options.windowTitle ( packageTitle )
  //options.docTitle ( packageTitle )
  //options.footer ( copyrightString )
}

task myGroovyDoc ( dependsOn : 'compile' , description : 'Create the GroovyDoc API documentation.' ) << {
  def groovydocDirPath = 'build/' + groovydocDirName
  def packageIncludeSpec = 'org.gparallelizer.*'
  ant.delete ( dir : groovydocDirPath , quiet : 'true' )
  ant.mkdir ( dir : groovydocDirPath )
  def sourceDirectory = source.main.groovy.srcDirs.toArray ( )[0]
  ant.groovydoc (
                 sourcePath : sourceDirectory ,
                 destDir : groovydocDirName ,
                 packageNames : packageIncludeSpec ,
                 overview : 'overview.html' ,
                 'private' : 'true' ,
                 use : 'true' ,
                 //author : 'true' ,
                 //version : 'true' ,
                 windowTitle : packageTitle ,
                 docTitle : packageTitle ,
                 header : packageTitle ,
                 footer : copyrightString,
                 //source : sourceCompatibility
                 )
}

task documentation ( dependsOn: [ 'javadoc' , 'groovydoc' ] , description : 'Create the API documentation.' )

task zipDoc(type: Zip, dependsOn: groovydoc) {
  baseName = 'docs'
//  fileSet(dir: explodedDistGroovydocsDir)
//  destinationDir = ''
}

task wrapper(type:Wrapper) {
    jarPath = 'wrapper'
    gradleVersion = '0.8'
}

//todo fork frequency in gradle 0.9