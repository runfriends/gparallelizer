usePlugin 'groovy'
usePlugin 'maven'

defaultTasks 'clean', 'test'

archivesBaseName = 'GParallelizer'
group = 'org.gparallelizer'
version = '0.8.3'
manifest.mainAttributes(
        'Implementation-Title': 'GParallelizer',
        'Implementation-Version': version,
        'provider': 'Vaclav Pech'
)

//srcRootName = 'src'
//srcDirNames = []
//testSrcDirNames = []
//groovySrcDirNames = ['main/groovy', 'main/java', 'main/resources', 'main/assembly']
groovyTestSrcDirNames = ['main/groovy', 'test/groovy']  //todo remove
sourceCompatibility = 1.5
targetCompatibility = 1.5
//buildTime = new Date()
//type = 'jar'

repositories {
    mavenCentral()
    mavenRepo urls: ["http://download.java.net/maven/2/"]
}

configurations {
    deployerJars
}

dependencies {
    groovy group: 'org.codehaus.groovy', name: 'groovy-all', version: '1.6.4'
    testCompile group: 'junit', name: 'junit', version: '4.5'
    compile "org.coconut.forkjoin:jsr166y:070108"
    deployerJars "org.jvnet.wagon-svn:wagon-svn:1.9"
}

uploadArchives {
    repositories.mavenDeployer {
            uniqueVersion = false
        configuration = configurations.deployerJars
        repository(url: "java-net:/maven2-repository/trunk/repository/") {
        }
    }
}

//zipDoc << {
//    basedir = 'build/docs'
//}
//zipDoc.dependsOn javadoc
//zipDoc2.doFirst {
//    println 'AAAAAAAAAAAAAAAAAAAAAAA'
//}

//basedir = 'build/docs'

//zip sources
//zip samples
//zip docs
//upload jar into a mvn repo

//zipSources(type:Zip) {
//
//}

//todo check groovydoc validity in IDEs
//todo set title


//javadocDirName = "build/docs/groovydoc"
//groovydoc.dependsOn javadoc

//jar(type:Jar) {
//
//}

//explodedDistDir = new File(distsDir as File, 'exploded')
//explodedDistDocsDir = new File(explodedDistDir, 'docs')
//explodedDistJavadocsDir = new File(explodedDistDocsDir, 'javadoc')
//explodedDistGroovydocsDir = new File(explodedDistDocsDir, 'groovydoc')

//javadoc {
//    title = "GParallelizer API $version"
//    destinationDir = explodedDistJavadocsDir
//    include 'org/gparallelizer/**'
//}

task zipDoc(type: Zip, dependsOn: groovydoc) << {
    baseName = 'docs'
    fileSet(dir: explodedDistGroovydocsDir)
    destinationDir = ''
}
//createTask('zipdoc', dependsOn:'groovydoc') {
//    ant.zip(baseDir: explodedDistGroovydocsDir, destFile:"$distsDir/GParallelizer-$version-doc.zip")
//}

//createTask('release', dependsOn:['archive_jar', 'zipdoc']) {
//    ant.zip(baseDir: explodedDistDocsDir, destFile:"$distsDir/GParallelizer-$version-doc.zip")
//
//}

//uploadArchives {
//    repositories {
//       flatDir(dirs: file('repos'))
//    }
//}

